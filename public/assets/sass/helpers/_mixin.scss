@mixin flexbox() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
@mixin flex($flex) {
  -webkit-box-flex: $flex;
  -webkit-flex: $flex;
  -ms-flex: $flex;
  flex: $flex;
}
@mixin flex-center() {
  -webkit-box-align: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -ms-flex-align: center;
  -webkit-box-orient: vertical;
  -ms-flex-orient: vertical;
}

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin border-radius($radius: $border-radius-normal, $vertical-radius: false) {
  @if $vertical-radius {
    border-radius: $radius unquote("/") $radius;
  }
  @else {
    border-radius: $radius;
  }
}

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:active,
  &.active {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }
}

@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

@function border-gradient($side, $color, $width: .5px) {
  @if $side == top {
    @return -webkit-gradient(linear, left bottom, left top, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, $color), to($color)) top left / 100% #{$width * 2} no-repeat;
    //@return -webkit-linear-gradient(180deg, $color, $color 50%, transparent 50%) top left / 100% #{$width * 2} no-repeat;
  }  @else if $side == bottom {
    @return -webkit-gradient(linear, left top, left bottom, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, $color), to($color)) bottom right / 100% #{$width * 2} no-repeat;
    //@return -webkit-linear-gradient(0, $color, $color 50%, transparent 50%) bottom right / 100% #{$width * 2} no-repeat;
  } @else if $side == left {
    @return -webkit-gradient(linear, right top, left top, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, $color), to($color)) bottom left / #{$width * 2} 100% no-repeat;
    //@return -webkit-linear-gradient(-90deg, $color, $color 50%, transparent 50%) bottom left / #{$width * 2} 100% no-repeat;
  } @else if $side == right {
    @return -webkit-gradient(linear, left top, right top, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, $color), to($color)) top right / #{$width * 2} 100% no-repeat;
    //@return -webkit-linear-gradient(90deg, $color, $color 50%, transparent 50%) top right / #{$width * 2} 100% no-repeat;
  }
}

@function safe-unquote($param) {
  @return if(type-of($param) == string, unquote($param), $param);
}

@mixin background-borders($sides, $color, $width: .5px, $bg-color: #FFFFFF) {
  border-style: solid;
  border-color: $color ;
  border-width: 0;
  @each $side in $sides {
    @if $side == top {
      border-top-width: 1px;
    }  @else if $side == bottom {
      border-bottom-width: 1px;
    } @else if $side == left {
      border-left-width: 1px;
    } @else if $side == right {
      border-right-width: 1px;
    }
  }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    border-width: 0;
    $result: ();
    @each $side in $sides {
      $result: append($result, safe-unquote(border-gradient($side, $color, $width)), comma);
    }
    background: $result;
    background-color: $bg-color;
  }
}

@mixin overlay() {
  //position: absolute;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.8);
  z-index: 10600;
  visibility: hidden;
  opacity: 0;
  transition-duration: 400ms;
  &.visible {
    visibility: visible;
    opacity: 1;
  }
}

@mixin hairline($position, $color) {
  @if $position == top {
    &:before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: auto;
      right: auto;
      height: 1px;
      width: 100%;
      background-color: $color;
      display: block;
      z-index: 15;
      transform-origin: 50% 0%;
      -webkit-transform-origin: 50% 0%;
      -moz-transform-origin: 50% 0%;
      -o-transform-origin: 50% 0%;
      @media only screen and (-webkit-min-device-pixel-ratio: 2) {
        transform: scaleY(0.5);
        -webkit-transform: scaleY(0.5);
        -moz-transform: scaleY(0.5);
        -o-transform: scaleY(0.5);
      }
      @media only screen and (-webkit-min-device-pixel-ratio: 3) {
        transform: scaleY(0.33);
        -webkit-transform: scaleY(0.33);
        -moz-transform: scaleY(0.33);
        -o-transform: scaleY(0.33);
      }
    }
  } @else if $position == left {
    &:before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: auto;
      right: auto;
      width: 1px;
      height: 100%;
      background-color: $color;
      display: block;
      z-index: 15;
      transform-origin: 0% 50%;
      -webkit-transform-origin: 0% 50%;
      -moz-transform-origin: 0% 50%;
      -o-transform-origin: 0% 50%;
      @media only screen and (-webkit-min-device-pixel-ratio: 2) {
        transform: scaleX(0.5);
        -webkit-transform: scaleX(0.5);
        -moz-transform: scaleX(0.5);
        -o-transform: scaleX(0.5);
      }
      @media only screen and (-webkit-min-device-pixel-ratio: 3) {
        transform: scaleX(0.33);
        -webkit-transform: scaleX(0.33);
        -moz-transform: scaleX(0.33);
        -o-transform: scaleX(0.33);
      }
    }
  } @else if $position == bottom {
    &:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: 0;
      right: auto;
      top: auto;
      height: 1px;
      width: 100%;
      background-color: $color;
      display: block;
      z-index: 15;
      transform-origin: 50% 100%;
      -webkit-transform-origin: 50% 50%;
      -moz-transform-origin: 50% 50%;
      -o-transform-origin: 50% 50%;
      @media only screen and (-webkit-min-device-pixel-ratio: 2) {
        transform: scaleY(0.5);
        -webkit-transform: scaleY(0.5);
        -moz-transform: scaleY(0.5);
        -o-transform: scaleY(0.5);
      }
      @media only screen and (-webkit-min-device-pixel-ratio: 3) {
        transform: scaleY(0.33);
        -webkit-transform: scaleY(0.33);
        -moz-transform: scaleY(0.33);
        -o-transform: scaleY(0.33);
      }
    }
  } @else if $position == right {
    &:after {
      content: '';
      position: absolute;
      right: 0;
      top: 0;
      left: auto;
      bottom: auto;
      width: 1px;
      height: 100%;
      background-color: $color;
      display: block;
      z-index: 15;
      transform-origin: 100% 50%;
      -webkit-transform-origin: 100% 50%;
      -moz-transform-origin: 100% 50%;
      -o-transform-origin: 100% 50%;
      @media only screen and (-webkit-min-device-pixel-ratio: 2) {
        transform: scaleX(0.5);
        -webkit-transform: scaleX(0.5);
        -moz-transform: scaleX(0.5);
        -o-transform: scaleX(0.5);
      }
      @media only screen and (-webkit-min-device-pixel-ratio: 3) {
        transform: scaleX(0.33);
        -webkit-transform: scaleX(0.33);
        -moz-transform: scaleX(0.33);
        -o-transform: scaleX(0.33);
      }
    }
  }
}
// For right and bottom
@mixin hairline-remove($position) {
  @if $position != left and $position != top {
    &:after {
      display: none;
    }
  } @else if $position == right and $position != bottom {
    &:before {
      display: none;
    }
  }
}
// For right and bottom
@mixin hairline-color($position, $color){
  @if $position != left and $position != top {
    &:after {
      background-color: $color;
    }
  } @else if $position != right and $position != bottom {
    &:before {
      background-color: $color;
    }
  }
}

@mixin justify-content($jc) {
  @if $jc == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
  } @else if $jc == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
  } @else if $jc == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
  } @else if $jc != flex-start and $jc != flex-end and $jc != space-between {
    -webkit-box-pack: $jc;
    -ms-flex-pack: $jc;
    -webkit-justify-content: $jc;
    justify-content: $jc;
  }
}
